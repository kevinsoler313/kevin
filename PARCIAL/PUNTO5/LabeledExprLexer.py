# Generated from LabeledExpr.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,79,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,3,3,46,8,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,4,9,59,
        8,9,11,9,12,9,60,1,10,4,10,64,8,10,11,10,12,10,65,1,11,3,11,69,8,
        11,1,11,1,11,1,12,4,12,74,8,12,11,12,12,12,75,1,12,1,12,0,0,13,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,1,
        0,3,2,0,65,90,97,122,1,0,48,57,2,0,9,9,32,32,85,0,1,1,0,0,0,0,3,
        1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
        0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
        0,0,0,0,25,1,0,0,0,1,27,1,0,0,0,3,29,1,0,0,0,5,31,1,0,0,0,7,45,1,
        0,0,0,9,47,1,0,0,0,11,49,1,0,0,0,13,51,1,0,0,0,15,53,1,0,0,0,17,
        55,1,0,0,0,19,58,1,0,0,0,21,63,1,0,0,0,23,68,1,0,0,0,25,73,1,0,0,
        0,27,28,5,61,0,0,28,2,1,0,0,0,29,30,5,40,0,0,30,4,1,0,0,0,31,32,
        5,41,0,0,32,6,1,0,0,0,33,34,5,115,0,0,34,35,5,105,0,0,35,46,5,110,
        0,0,36,37,5,99,0,0,37,38,5,111,0,0,38,46,5,115,0,0,39,40,5,116,0,
        0,40,41,5,97,0,0,41,46,5,110,0,0,42,43,5,108,0,0,43,44,5,111,0,0,
        44,46,5,103,0,0,45,33,1,0,0,0,45,36,1,0,0,0,45,39,1,0,0,0,45,42,
        1,0,0,0,46,8,1,0,0,0,47,48,5,42,0,0,48,10,1,0,0,0,49,50,5,47,0,0,
        50,12,1,0,0,0,51,52,5,43,0,0,52,14,1,0,0,0,53,54,5,45,0,0,54,16,
        1,0,0,0,55,56,5,94,0,0,56,18,1,0,0,0,57,59,7,0,0,0,58,57,1,0,0,0,
        59,60,1,0,0,0,60,58,1,0,0,0,60,61,1,0,0,0,61,20,1,0,0,0,62,64,7,
        1,0,0,63,62,1,0,0,0,64,65,1,0,0,0,65,63,1,0,0,0,65,66,1,0,0,0,66,
        22,1,0,0,0,67,69,5,13,0,0,68,67,1,0,0,0,68,69,1,0,0,0,69,70,1,0,
        0,0,70,71,5,10,0,0,71,24,1,0,0,0,72,74,7,2,0,0,73,72,1,0,0,0,74,
        75,1,0,0,0,75,73,1,0,0,0,75,76,1,0,0,0,76,77,1,0,0,0,77,78,6,12,
        0,0,78,26,1,0,0,0,6,0,45,60,65,68,75,1,6,0,0
    ]

class LabeledExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    FUNC = 4
    MUL = 5
    DIV = 6
    ADD = 7
    SUB = 8
    POT = 9
    ID = 10
    INT = 11
    NEWLINE = 12
    WS = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'('", "')'", "'*'", "'/'", "'+'", "'-'", "'^'" ]

    symbolicNames = [ "<INVALID>",
            "FUNC", "MUL", "DIV", "ADD", "SUB", "POT", "ID", "INT", "NEWLINE", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "FUNC", "MUL", "DIV", "ADD", "SUB", 
                  "POT", "ID", "INT", "NEWLINE", "WS" ]

    grammarFileName = "LabeledExpr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


